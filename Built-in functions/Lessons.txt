SELECT CONCAT_WS(' ', FirstName, LastName)
AS [Full Name]
FROM Employee

SELECT CONCAT_WS('.', SUBSTRING((FirstName,1,1), SUBSTRING(Lastname, 1, 1), '')) AS
FROM Employee

SELECT REPLACE('My bad text', 'bad', 'awesome')

SELECT CONCAT(LTRIM('     Pesho    '), '...') AS PS

SELECT CONCAT(RTRIM('     Pesho    '), '...') AS PS

SELECT CONCAT(SUBSTRING(PaymentNumber, 1, 5), 6)
  FROM Customers

SELECT
  ID
  ,FirstName
  ,LastName
  ,CONCAT(SUBSTRING(PaymentNumber1, 1, 5),
          REPLICATE('*', LEN(PaymentNumber1) - 5))
FROM  Customer

SELECT CHARINDEX('IS', 'This are unique')

SELECT STUFF('This are unique', 6, 3, 'is')

SELECT FORMAT(CAST('2019-01-21' AS date), 'D', 'de-DE')

SELECT FORMAT(CAST('2019-01-21' AS date), 'D', 'bg-BG')

SELECT TRANSLATE('2*[3+4]/{7-2}', '[]{}', '()()')

SELECT IIF(LEN(LastName) < 6, LastName, 'Too long') FROM dbo.Employees

--Math functions
SELECT ROUND(18.567, 2)

-- parameters -1 negative befor decimal point
SELECT ROUND(18.567, -1)

SELECT ROUND(180.65, -2)

SELECT FLOOR(1.3)
--compare
SELECT ROUND(1.9, 0)
SELECT FLOOR(1.9)

SELECT CEILING(1.9)
SELECT CEILING(1.2)

SELECT SIGN(-23)

SELECT SIGN(NULL)

SELECT SIGN(23)

SELECT RAND();
SELECT RAND();
SELECT RAND();
SELECT RAND();
SELECT RAND();

--DATE FUNCTIONS

SELECT DATEPART(day, '2020-04-07')

SELECT DATEPART(quarter, '2020-04-07')

SELECT * FROM Projects
WHERE DATEPART(QUARTER, StartDate) = 3

SELECT * FROM Projects
WHERE DATEPART(QUARTER, StartDate) <> 3

SELECT DATEDIFF(SECOND, '2020-04-07T09:03:22', '2020-04-07T09:03:01')

SELECT DATEDIFF(SECOND, '2020-04-07T09:03:22', '2020-04-07T09:03:51')

SELECT HireDate, DATEADD(YEAR, 5, HireDate) AS Exp
FROM dbo.Employees

SELECT EOMONTH(GETDATE())

SELECT [Name], ISNULL(CAST(EndDate AS VARCHAR), 'Not Finished')
FROM Projects

SELECT [Name], COALESCE(CAST(EndDate AS VARCHAR), 'Not Finished')
FROM Projects

SELECT COALESCE(NULL, NULL, 'FirstValue', NULL, NULL, 'SecondValue')

SELECT EmployeeId, FirstName, LastName
FROM dbo.Employees
ORDER BY EmployeeId
OFFSET 10 ROWS
FETCH NEXT 5 ROWS ONLY

