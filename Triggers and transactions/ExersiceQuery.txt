use Bank

---------------------------Problem 14. Create Table Logs

CREATE TABLE Logs
(
	LogId INT PRIMARY KEY IDENTITY,
	AccountId INT FOREIGN KEY REFERENCES Accounts(Id),
	OldSum DECIMAL(15, 2),
	NewSum DECIMAL(15, 2)
)


CREATE OR ALTER TRIGGER tr_InsertAccountInfo ON Accounts FOR UPDATE
AS
DECLARE @newSum DECIMAL(15, 2) = (SELECT Balance FROM inserted)
DECLARE @oldwSum DECIMAL(15, 2) = (SELECT Balance FROM deleted)
DECLARE @accountId INT = (SELECT Id FROM inserted)

INSERT INTO Logs (AccountId, NewSum, OldSum) VALUES
(@accountId, @newSum, @oldwSum)



UPDATE Accounts
SET Balance += 10
WHERE Id = 1

SELECT * FROM Logs

---------------------------15. Create Table Emails

CREATE TABLE NotificationEmails
(
	Id INT PRIMARY KEY IDENTITY,
	Recipient INT FOREIGN KEY REFERENCES Accounts(Id),
	[Subject] VARCHAR(MAX),
	Body VARCHAR(MAX)
)

CREATE TRIGGER tr_LogEmail ON Logs FOR INSERT
AS
DECLARE @newSum DECIMAL(15, 2) = (SELECT TOP(1) NewSum FROM inserted)
DECLARE @oldwSum DECIMAL(15, 2) = (SELECT TOP(1) OldSum FROM inserted)
DECLARE @accountId INT = (SELECT AccountId FROM inserted)
DECLARE @date VARCHAR(30) = CONVERT(VARCHAR(30), GETDATE(), 103)

INSERT INTO NotificationEmails (Recipient, [Subject], Body) VALUES
(
	@accountId
	,CONCAT_WS(' ', 'Balance change for account:', @accountId)
	,CONCAT_WS(' ', 'On', @date,  'your balance was changed from',  @oldwSum, 'to',  @newSum)
)

SELECT * FROM Accounts WHERE Id = 2

UPDATE Accounts
SET Balance += 1000
WHERE Id = 2

SELECT * FROM Logs
SELECT * FROM NotificationEmails

---------------------------16. Deposit Money
CREATE PROCEDURE usp_DepositMoney @accountId INT, @moneyAmount DECIMAL(15, 4)
AS
BEGIN TRANSACTION

DECLARE @account INT = (SELECT Id FROM Accounts WHERE Id = @accountId)

IF(@account IS NULL)
BEGIN
	ROLLBACK
	RAISERROR('Invalid account ID!', 16, 1)
	RETURN
END

IF(@moneyAmount < 0)
BEGIN
	ROLLBACK
	RAISERROR('Negative ammount', 16, 2)
	RETURN
END

UPDATE Accounts
SET Balance += @moneyAmount
WHERE Id = @accountId
COMMIT


//3 ROW AFFECTED BECAUSE TABLE LOGS AND NOTIFICATIONEMAILS ARE LINKED
SELECT * FROM Accounts WHERE Id = 2
EXEC usp_DepositMoney 2, 1000.0000
SELECT * FROM Accounts WHERE Id = 2

---------------------------17. Withdraw Money Procedure

CREATE PROCEDURE usp_WithdrawMoney @accountId INT, @moneyAmount DECIMAL(15, 4)
AS
BEGIN TRANSACTION

DECLARE @account INT = (SELECT Id FROM Accounts WHERE Id = @accountId)

DECLARE @currentAmount DECIMAL(15, 4) = (SELECT Balance FROM Accounts WHERE Id = @accountId)

IF(@account IS NULL)
BEGIN
	ROLLBACK
	RAISERROR('Invalid account ID!', 16, 1)
	RETURN
END

IF(@moneyAmount < 0)
BEGIN
	ROLLBACK
	RAISERROR('Negative ammount!', 16, 2)
	RETURN
END

IF(@currentAmount -  @moneyAmount > 0)
BEGIN
	ROLLBACK
	RAISERROR('bigger than current amount', 16, 3)
	RETURN
END

UPDATE Accounts
SET Balance -= @moneyAmount
WHERE Id = @accountId
COMMIT

SELECT * FROM Accounts
WHERE Id = 5

EXEC  usp_WithdrawMoney 5, 25.00

SELECT * FROM Accounts
WHERE Id = 5

---------------------------18. Money Transfer

CREATE PROC usp_TransferMoney @senderId INT, @receiverId INT, @amount DECIMAL(15, 4)
AS
BEGIN TRANSACTION

EXEC dbo.usp_WithdrawMoney @senderId, @amount
EXEC dbo.usp_DepositMoney @receiverId, @amount
COMMIT


SELECT * FROM Accounts WHERE Id = 1 OR Id = 2
EXEC usp_TransferMoney 1, 2, 100
SELECT * FROM Accounts WHERE Id = 1 OR Id = 2

